{"version":3,"sources":["Header.js","Footer.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","props","console","log","onClick","onReset","className","onIncrement","Main","numbersToShow","slice","toShow","map","num","id","App","useState","number","setNum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAQeA,MANf,WACI,OAAO,iCACH,gD,MCMOC,MARf,SAAgBC,GAEZ,OADAC,QAAQC,IAAI,SAAUF,GACf,mCACL,wBAAQG,QAASH,EAAMI,QAASC,UAAU,aAA1C,eACA,wBAAQF,QAASH,EAAMM,YAAaD,UAAU,aAA9C,mB,MCeSE,MAnBf,SAAcP,GACV,IAUMQ,EAVU,CACZ,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IAE0BC,MAAM,EAAGT,EAAMU,QAC7C,OAAO,+BACFF,EAAcG,KAAI,SAACC,EAAKC,GACrB,OAAO,qBAAcR,UAAU,eAAxB,SAAwCO,GAA9BC,SCOdC,MAjBf,WAAgB,IAAD,EACYC,mBAAS,GADrB,mBACNC,EADM,KACEC,EADF,KAQb,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMK,OAAQM,IACd,cAAC,EAAD,CAAQZ,QAVZ,WACEa,EAAO,IASmBX,YAP5B,WACEW,EAAOD,EAAO,UCAHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ba908b7a.chunk.js","sourcesContent":["import './Header.css';\n\nfunction Header() {\n    return <header>\n        <h1>Number game</h1>\n    </header>;\n}\n\nexport default Header;","import './Footer.css';\n\nfunction Footer(props) {\n    console.log('footer', props);\n    return <footer>\n      <button onClick={props.onReset} className=\"footer-btn\">0</button>\n      <button onClick={props.onIncrement} className=\"footer-btn\">+</button>\n    </footer>;\n}\n\nexport default Footer;","import './Main.css';\n\nfunction Main(props) {\n    const numbers = [\n        1000,\n        30,\n        1000,\n        30,\n        1000,\n        30,\n        1000,\n        10\n    ];\n    const numbersToShow = numbers.slice(0, props.toShow);\n    return <main>\n        {numbersToShow.map((num, id) => {\n            return <div key={id} className=\"main__number\">{num}</div>;\n        })}\n    </main>;\n}\n\nexport default Main;","import {useState} from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\n\nfunction App() {\n  const [number, setNum] = useState(1);\n  function reset() {\n    setNum(1);\n  }\n  function increment() {\n    setNum(number+1);\n  }\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Main toShow={number}></Main>\n      <Footer onReset={reset} onIncrement={increment}></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}